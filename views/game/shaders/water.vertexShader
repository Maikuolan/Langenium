	uniform mat4 textureMatrix;
	varying vec4 mirrorCoord;

	uniform sampler2D noiseTexture;
	uniform float noiseScale;

	uniform sampler2D noiseTexture2;
	uniform float noiseSpeed2;
	uniform float noiseScale2;

	uniform sampler2D noiseTexture3;
	uniform float noiseSpeed3;
	uniform float noiseScale3;

	uniform float time;
	uniform float alpha;
	varying vec2 vUv;

	varying vec3 newPosition;

	void main() 
	{ 
	    vUv = uv;

	    
	    //vec2 uvTimeShift = vUv + vec2( 1.1, 1.9 ) * time * 0.15; // bumpSpeed;
		//vec4 bumpData = texture2D( noiseTexture, uvTimeShift );
		
		//float displacement = bumpData.g * 50.0; // bumpScale
		//vec3 bumpedPosition = position + normal * displacement;

		
		vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );
		vec4 worldPosition = modelMatrix * vec4( position, 1.0 );
		mirrorCoord = textureMatrix * worldPosition;

		gl_Position = projectionMatrix * mvPosition;
	}